
Перем Токены;
Перем Узлы;
Перем ТаблицаТокенов;
Перем ТаблицаОшибок;

Процедура Инициализировать(Парсер, Параметры) Экспорт
	Токены = Парсер.Токены();
	ТаблицаТокенов = Парсер.ТаблицаТокенов();
	ТаблицаОшибок = Парсер.ТаблицаОшибок();
	Узлы = Парсер.Узлы();
КонецПроцедуры // Инициализировать()

Функция Закрыть() Экспорт
	Возврат Неопределено;
КонецФункции // Закрыть()

Функция Подписки() Экспорт
	Перем Подписки;
	Подписки = Новый Массив;
	Подписки.Добавить("ПосетитьОператоры");
	Возврат Подписки;
КонецФункции // Подписки()

#Область РеализацияПодписок

Процедура ПосетитьОператоры(Операторы) Экспорт

	Для Каждого Оператор Из Операторы Цикл

		СледующийТокен = ТаблицаТокенов[Оператор.Конец + 1];

		Если СледующийТокен.Токен <> Токены.ТочкаСЗапятой И Не СтрНачинаетсяС(Оператор.Тип, "ИнструкцияПрепроцессора") Тогда

			Ошибка("Пропущена точка с запятой", Оператор.Конец);

		КонецЕсли;

	КонецЦикла;

КонецПроцедуры // ПосетитьОператоры()

#КонецОбласти // РеализацияПодписок

Процедура Ошибка(Текст, ИндексНачала, ИндексКонца = Неопределено)
	Начало = ТаблицаТокенов[ИндексНачала];
	Ошибка = ТаблицаОшибок.Добавить();
	Ошибка.Источник = "ДетекторПропущенныхТочекСЗапятой";
	Ошибка.Текст = Текст;
	Ошибка.ПозицияНачала = Начало.Начало;
	Ошибка.НомерСтрокиНачала = Начало.НомерСтроки;
	Ошибка.НомерКолонкиНачала = Начало.НомерКолонки;
	Если ИндексКонца = Неопределено Или ИндексКонца = ИндексНачала Тогда
		Ошибка.ПозицияКонца = Начало.Конец;
		Ошибка.НомерСтрокиКонца = Начало.НомерСтроки;
		Ошибка.НомерКолонкиКонца = Начало.НомерКолонки + Начало.Длина;
	Иначе
		Конец = ТаблицаТокенов[ИндексКонца];
		Ошибка.ПозицияКонца = Конец.Конец;
		Ошибка.НомерСтрокиКонца = Конец.НомерСтроки;
		Ошибка.НомерКолонкиКонца = Конец.НомерКолонки + Конец.Длина;
	КонецЕсли;
КонецПроцедуры