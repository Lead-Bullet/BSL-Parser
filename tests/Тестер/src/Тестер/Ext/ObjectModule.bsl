
Перем Парсер;

Процедура Пуск(ПарсерВстроенногоЯзыка) Экспорт

	Парсер = ПарсерВстроенногоЯзыка;

	 //#Область Разбирается

	Если Не Разбирается("Var x; x = x + 1") Тогда
		ВызватьИсключение "Тест провален";
	КонецЕсли;

	Если Не Разбирается("Var x; x = +x + -1") Тогда
		ВызватьИсключение "Тест провален";
	КонецЕсли;

	Если Не Разбирается("Var x; y = ?(x, 1, 2).y(1)") Тогда
		ВызватьИсключение "Тест провален";
	КонецЕсли;

	Если Не Разбирается("Var x; y = x[0]") Тогда
		ВызватьИсключение "Тест провален";
	КонецЕсли;

	Если Не Разбирается("Var x; y = x[0].z()") Тогда
		ВызватьИсключение "Тест провален";
	КонецЕсли;

	Если Не Разбирается("Var x; y = x[0].z[1].q.q()") Тогда
		ВызватьИсключение "Тест провален";
	КонецЕсли;

	Если Не Разбирается("Var x; x.y = x") Тогда
		ВызватьИсключение "Тест провален";
	КонецЕсли;

	 //#КонецОбласти // Разбирается

	 //#Область Падает

	Если Не Падает("x = x + 1", "Не обнаружено объявление идентификатора `x`", 1, 5) Тогда
		ВызватьИсключение "Тест провален";
	КонецЕсли;

	Если Не Падает("x = y + 1", "Не обнаружено объявление идентификатора `y`", 1, 5) Тогда
		ВызватьИсключение "Тест провален";
	КонецЕсли;

	Если Не Падает("x[0] = 1 + 1", "Не обнаружено объявление идентификатора `x`", 1, 1) Тогда
		ВызватьИсключение "Тест провален";
	КонецЕсли;

	Если Не Падает("For Each x In x Do EndDo", "Не обнаружено объявление идентификатора `x`", 1, 15) Тогда
		ВызватьИсключение "Тест провален";
	КонецЕсли;

	Если Не Падает("For Each In x do EndDo", "Ожидалось Идентификатор", 1, 10) Тогда
		ВызватьИсключение "Тест провален";
	КонецЕсли;

	Если Не Падает("For x In x do EndDo", "Ожидалось ЗнакРавно", 1, 7) Тогда
		ВызватьИсключение "Тест провален";
	КонецЕсли;

	Если Не Падает("For x = 1 In x do EndDo", "Ожидалось По", 1, 11) Тогда
		ВызватьИсключение "Тест провален";
	КонецЕсли;

	Если Не Падает("For x = 1 To 2 EndDo", "Ожидалось Цикл", 1, 16) Тогда
		ВызватьИсключение "Тест провален";
	КонецЕсли;

	Если Не Падает("x = .1", "Ожидался операнд", 1, 5) Тогда
		ВызватьИсключение "Тест провален";
	КонецЕсли;

	Если Не Падает("x = 1.x", "Ожидалось КонецТекста", 1, 7) Тогда
		ВызватьИсключение "Тест провален";
	КонецЕсли;

	Если Не Падает("x = 1 1", "Ожидалось КонецТекста", 1, 7) Тогда
		ВызватьИсключение "Тест провален";
	КонецЕсли;

	Если Не Падает("x = / 2", "Ожидался операнд", 1, 5) Тогда
		ВызватьИсключение "Тест провален";
	КонецЕсли;

	 //#КонецОбласти // Падает

	Message("Все тесты прошли!");

КонецПроцедуры

Функция Разбирается(Исходник)

	Попытка
		Парсер.Разобрать(Исходник);
	Исключение
		Возврат Ложь;
	КонецПопытки;

	Если Парсер.ТаблицаОшибок().Количество() > 0 Тогда
		Возврат Ложь;
	КонецЕсли;

	Возврат Истина;

КонецФункции

Функция Падает(Исходник, ТекстОшибки, НомерСтроки, Позиция)

	Попытка
		Парсер.Разобрать(Исходник);
	Исключение
		Если СтрНайти(ИнформацияОбОшибке().Описание, ТекстОшибки) = 0 Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецПопытки;

	Ошибки = Парсер.ТаблицаОшибок();

	Если Ошибки.Count() <> 1
	 Или Не ОжидаемаяОшибка(Ошибки[0],
		ТекстОшибки, НомерСтроки, Позиция) Тогда
		Возврат Ложь;
	КонецЕсли;

	Возврат Истина;

КонецФункции

Функция ОжидаемаяОшибка(Ошибка, Текст, НомерСтроки, Позиция)
	Если СтрНайти(Ошибка.Текст, Текст) > 0
		И Ошибка.НомерСтроки = НомерСтроки
		И Ошибка.Позиция = Позиция Тогда
		Возврат Истина;
	КонецЕсли;
	Возврат Ложь;
КонецФункции